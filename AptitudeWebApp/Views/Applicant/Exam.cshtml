@* <h3>Login</h3>
 *@
 @using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor Accessor
 @model Exam
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <title>Exam Page</title>
    <link rel="stylesheet" href="~/css/exam.css" asp-append-version="true" />

</head>
<body>
    <div class="wrapper">

    <div>
            @if (Model.ExamTypeId == 1)
            {
            <p class="result">General Knowledge</p>
            }
            else if (Model.ExamTypeId == 1)
            {
            <p class="result">Mathematics</p>
            }
            else if (Model.ExamTypeId == 3)
            {
            <p class="result">Computer Technology</p>
            }
            else
            {
            <p class="result">General Knowledge</p>
            }
    </div>
    <div id="timer"></div>

    <p>Time Remaining: @TimeRemaining(Model.StartTime.Value, Model.TotalTimeAllowedInSeconds)</p>

    <form asp-action="SubmitAnswer" asp-controller="Exam" method="post">
            @for (var i = 0; i < Model.ExamQuestions.Count; i++)
            {
            <div>
                <p>@Model.ExamQuestions[i].QuestionText</p>

                    @for (var j = 0; j < Model.ExamQuestions[i].Answers.Count; j++)
                    {
                        var answerId = $"answer-{i}-{j}";
                    <div>
                        <input type="radio" id="@answerId" name="SelectedAnswers[@i]" value="@Model.ExamQuestions[i].Answers[j].Id" />
                        <label for="@answerId">@Model.ExamQuestions[i].Answers[j].Text</label>
                    </div>
                    }
            </div>
            }

        <button type="submit" class="btn btn-primary">Submit</button>
    </form>

    <div>
            <a asp-action="LogOut" asp-controller="Account" class="logout">LOGOUT</a>
    </div>

    <div>
        <a class="exit1"></a>
        <a href="#" class="exit">EXIT</a>
        <a href="#" class="exit2">EXIT</a>
    </div>
    </div>
</body>
</html>
@functions {
    bool IsTimeExpired(DateTime startTime, int totalTimeAllowedInSeconds)
    {
        var elapsedTime = DateTime.Now - startTime;
        return elapsedTime.TotalSeconds > totalTimeAllowedInSeconds;
    }
    string TimeRemaining(DateTime startTime, int totalTimeAllowedInSeconds)
    {
        if (IsTimeExpired(startTime, totalTimeAllowedInSeconds))
        {
            return "Time Expired";
        }

        var elapsedTime = DateTime.Now - startTime;
        var remainingTime = totalTimeAllowedInSeconds - (int)elapsedTime.TotalSeconds;

        var minutes = remainingTime / 60;
        var seconds = remainingTime % 60;

        return $"{minutes:D2}:{seconds:D2}";
    }
}